class Solution:
    def minWindow(self, s: str, t: str) -> str:
        if len(t) > len(s):
            return ""
        
        tCount, window = {}, {}
        for i in range(len(t)):
            tCount[t[i]] = 1 + tCount.get(t[i], 0)

        l, have, want = 0, 0, len(tCount)
        res, resLength = [-1, -1], float("infinity")
        for r in range(len(s)):
            window[s[r]] = 1 + window.get(s[r], 0)
            
            if s[r] in tCount and window[s[r]] == tCount[s[r]]:
                have += 1
            
            while have == want:
                if (r - l + 1) < resLength:
                    res = [l, r]
                    resLength = r - l + 1
            
                window[s[l]] -= 1

                if s[l] in tCount and window[s[l]] < tCount[s[l]]:
                    have -= 1
                
                l += 1

        l, r = res
        return s[l:r + 1] if resLength != float("infinity") else ""

print(Solution.minWindow(Solution, "aa", "aa"))